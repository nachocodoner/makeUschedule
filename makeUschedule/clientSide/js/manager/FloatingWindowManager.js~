(function(se){
	var floatingWindows = [];
	var backgroundFloatingWindow;
	se.Managers.FloatingWindowManager = new Class({
		initialize: function(){
		},
		add: function(idFloatingWindow){
			var floatingWindow = new se.Entities.FloatingWindow(idFloatingWindow);
			var floatingManager = this;
			
			floatingWindow.element.close.addEvent('click', function(){
				floatingManager.hide(floatingWindow);
			});
			
			floatingWindows.push(floatingWindow);
			
			return floatingWindow;
		},
		setContent: function(floatingWindow, content){
			floatingWindow.element.body.set('html', content);
		},
		show: function(floatingWindow){
			var elementFloatingWindow = floatingWindow.element.body.getParent();
			var backgroundFloatingWindow = elementFloatingWindow.getParent();
			backgroundFloatingWindow.setStyles({
				display: 'block'
			});
			elementFloatingWindow.setStyles({
				display: 'block'
			});
			elementFloatingWindow.setStyles({
				'margin-top': -elementFloatingWindow.getSize().y/2,
				'margin-left': -elementFloatingWindow.getSize().x/2
			});
		},
		hide: function(floatingWindow){
			var elementFloatingWindow = floatingWindow.element.body.getParent();
			var backgroundFloatingWindow = elementFloatingWindow.getParent();
			elementFloatingWindow.setStyles({
				display: 'none'
			});
			backgroundFloatingWindow.setStyles({
				display: 'none'
			});
			
		},
		loadAddTaskFormWindow: function(floatingWindow, schedule){
			var langManager = new se.Managers.MultiLangManager();
			
			var data = {
				string: {
					addtask: langManager._("addtask"),
					tasktagname: langManager._("tasktagname"),
					tasktagcolor: langManager._("tasktagcolor"),
					orexisting: langManager._("orexisting"),
					since: langManager._("since"),
					to: langManager._("to"),
					additionaltags: langManager._("additionaltags"),
					dayofweek: langManager._("dayofweek"),
					hours: langManager._("hours"),
					minutes: langManager._("minutes"),
					tagtype: langManager._("tagtype"),
					backgroundtagtype: langManager._("backgroundtagtype"),
					bordertagtype: langManager._("bordertagtype"),
					newtasktag: langManager._("newtasktag"),
					texttagtype: langManager._("texttagtype")
				},
				schedule: {
					daysOfWeek: schedule.nameDaysOfWeek,
					taskTags: schedule.taskTags,
					additionalTags: schedule.additionalTags
				}
			};
			
			this.setContent(floatingWindow, tmpl("formAddTask", data));
			this.show(floatingWindow);
			
			var addTaskButton = floatingWindow.element.body.getElementById('addtaskButton');
			addTaskButton.addEvent('click', function(){
				var form = $('addTaskForm').serialize();
				
				console.log(form);
			});
			
		},
		loadAddAdditionalTagFormWindow: function(floatingWindow){
			var langManager = new se.Managers.MultiLangManager();
			
			var data = {
				string: {
					addadditionaltag: langManager._("addadditionaltag"),
					tasktagname: langManager._("tasktagname"),
					tasktagcolor: langManager._("tasktagcolor"),
					tagtype: langManager._("tagtype"),
					backgroundtagtype: langManager._("backgroundtagtype"),
					bordertagtype: langManager._("bordertagtype"),
					texttagtype: langManager._("texttagtype")
				}
			};
			
			this.setContent(floatingWindow, tmpl("formAddAdditionalTag", data));
			this.show(floatingWindow);
			
			var addAdditionalTagButton = floatingWindow.element.getElementById('addAdditionalTagButton');
			addAdditionalTagButton.addEvent('click', function(){
				var form = $('addAdditionalTagForm').serialize();
				
				console.log(form);
			});

		}
	});
})(se);
